{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Coursera/Projects/Build_a_Website_using_an_API_with_HTML,_JavaScript,_and_JSON/project/weather-app/src/components/HourlyForecast.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction HourlyForecast({\n  forecast,\n  data\n}) {\n  console.log(\"Forecast in HourlyForecast:\", forecast);\n  console.log(\"Data in HourlyForecast:\", data);\n  if (!forecast || !forecast.forecastday || forecast.forecastday.length === 0 || !data || !data.location ||\n  // Add this check\n  !data.location.localtime) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No hourly forecast available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Get the current time from the API response\n  const localTimeStr = data.location.localtime;\n  const localTime = new Date(localTimeStr);\n  const currentHour = localTime.getHours();\n  const currentDay = localTime.getDate();\n\n  // Function to adjust and format hour data\n  const adjustHourData = hourData => {\n    const hourTime = new Date(hourData.time);\n    const adjustedHour = hourTime.getHours();\n    const formattedHour = adjustedHour % 12 || 12; // Convert to 12-hour format\n    const ampm = adjustedHour < 12 ? \"AM\" : \"PM\";\n    const adjustedDay = hourTime.getDate();\n    return {\n      ...hourData,\n      adjustedTime: `${formattedHour} ${ampm}`,\n      adjustedHour: adjustedHour,\n      adjustedDay: adjustedDay\n    };\n  };\n\n  // Process the current day's forecast\n  let adjustedForecast = forecast.forecastday[0].hour.map(adjustHourData).filter(hour => {\n    return hour.adjustedDay === currentDay && hour.adjustedHour >= currentHour;\n  });\n\n  // If there are less than 12 hours left in the day, get the rest from the next day\n  if (adjustedForecast.length < 12 && forecast.forecastday.length > 1) {\n    const nextDayForecast = forecast.forecastday[1].hour.map(adjustHourData).filter(hour => hour.adjustedDay !== currentDay).slice(0, 12 - adjustedForecast.length);\n    adjustedForecast.push(...nextDayForecast);\n  }\n  adjustedForecast = adjustedForecast.slice(0, 12);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"hourly-forecast\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-center mb-3\",\n      children: \"Hourly Forecast\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row row-cols-1 row-cols-md-3 row-cols-lg-6 g-4\",\n      children: adjustedForecast.map(hour => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card h-100 text-center\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              className: \"card-title\",\n              children: hour.adjustedTime\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              src: hour.condition.icon,\n              alt: hour.condition.text,\n              className: \"weather-icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"card-text\",\n              children: [hour.temp_f, \"\\xB0F / \", hour.temp_c, \"\\xB0C\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"card-text\",\n              children: hour.condition.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this)\n      }, hour.time_epoch, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n_c = HourlyForecast;\nexport default HourlyForecast;\nvar _c;\n$RefreshReg$(_c, \"HourlyForecast\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","HourlyForecast","forecast","data","console","log","forecastday","length","location","localtime","children","fileName","_jsxFileName","lineNumber","columnNumber","localTimeStr","localTime","Date","currentHour","getHours","currentDay","getDate","adjustHourData","hourData","hourTime","time","adjustedHour","formattedHour","ampm","adjustedDay","adjustedTime","adjustedForecast","hour","map","filter","nextDayForecast","slice","push","className","src","condition","icon","alt","text","temp_f","temp_c","time_epoch","_c","$RefreshReg$"],"sources":["/mnt/c/Coursera/Projects/Build_a_Website_using_an_API_with_HTML,_JavaScript,_and_JSON/project/weather-app/src/components/HourlyForecast.js"],"sourcesContent":["import React from \"react\";\r\n\r\nfunction HourlyForecast({ forecast, data }) {\r\n  console.log(\"Forecast in HourlyForecast:\", forecast);\r\n  console.log(\"Data in HourlyForecast:\", data);\r\n  if (\r\n    !forecast ||\r\n    !forecast.forecastday ||\r\n    forecast.forecastday.length === 0 ||\r\n    !data ||\r\n    !data.location || // Add this check\r\n    !data.location.localtime\r\n  ) {\r\n    return <div>No hourly forecast available.</div>;\r\n  }\r\n\r\n  // Get the current time from the API response\r\n  const localTimeStr = data.location.localtime;\r\n  const localTime = new Date(localTimeStr);\r\n  const currentHour = localTime.getHours();\r\n  const currentDay = localTime.getDate();\r\n\r\n  // Function to adjust and format hour data\r\n  const adjustHourData = (hourData) => {\r\n    const hourTime = new Date(hourData.time);\r\n    const adjustedHour = hourTime.getHours();\r\n    const formattedHour = adjustedHour % 12 || 12; // Convert to 12-hour format\r\n    const ampm = adjustedHour < 12 ? \"AM\" : \"PM\";\r\n    const adjustedDay = hourTime.getDate();\r\n\r\n    return {\r\n      ...hourData,\r\n      adjustedTime: `${formattedHour} ${ampm}`,\r\n      adjustedHour: adjustedHour,\r\n      adjustedDay: adjustedDay,\r\n    };\r\n  };\r\n\r\n  // Process the current day's forecast\r\n  let adjustedForecast = forecast.forecastday[0].hour\r\n    .map(adjustHourData)\r\n    .filter((hour) => {\r\n      return (\r\n        hour.adjustedDay === currentDay && hour.adjustedHour >= currentHour\r\n      );\r\n    });\r\n\r\n  // If there are less than 12 hours left in the day, get the rest from the next day\r\n  if (adjustedForecast.length < 12 && forecast.forecastday.length > 1) {\r\n    const nextDayForecast = forecast.forecastday[1].hour\r\n      .map(adjustHourData)\r\n      .filter((hour) => hour.adjustedDay !== currentDay)\r\n      .slice(0, 12 - adjustedForecast.length);\r\n    adjustedForecast.push(...nextDayForecast);\r\n  }\r\n  adjustedForecast = adjustedForecast.slice(0, 12);\r\n\r\n  return (\r\n    <div className=\"hourly-forecast\">\r\n      <h2 className=\"text-center mb-3\">Hourly Forecast</h2>\r\n      <div className=\"row row-cols-1 row-cols-md-3 row-cols-lg-6 g-4\">\r\n        {adjustedForecast.map((hour) => (\r\n          <div key={hour.time_epoch} className=\"col\">\r\n            <div className=\"card h-100 text-center\">\r\n              <div className=\"card-body\">\r\n                <h5 className=\"card-title\">{hour.adjustedTime}</h5>\r\n                <img\r\n                  src={hour.condition.icon}\r\n                  alt={hour.condition.text}\r\n                  className=\"weather-icon\"\r\n                />\r\n                <p className=\"card-text\">\r\n                  {hour.temp_f}°F / {hour.temp_c}°C\r\n                </p>\r\n                <p className=\"card-text\">{hour.condition.text}</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HourlyForecast;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}