{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Coursera/Projects/Build_a_Website_using_an_API_with_HTML,_JavaScript,_and_JSON/project/weather-app/src/components/HourlyForecast.js\";\n// In HourlyForecast.js (or wherever your HourlyForecast component is)\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction HourlyForecast({\n  forecast,\n  timezoneOffset\n}) {\n  if (!forecast || !forecast.forecastday || forecast.forecastday.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No hourly forecast available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 12\n    }, this);\n  }\n  const adjustedForecast = forecast.forecastday[0].hour.map(hourData => {\n    const utcTime = new Date(hourData.time_epoch * 1000); // Convert epoch to milliseconds\n    const offsetMilliseconds = timezoneOffset * 60 * 1000; // Convert offset to milliseconds\n    const adjustedTime = new Date(utcTime.getTime() + offsetMilliseconds);\n    const adjustedHour = adjustedTime.getHours();\n    const formattedHour = adjustedHour % 12 || 12; // Convert to 12-hour format\n    const ampm = adjustedHour < 12 ? \"AM\" : \"PM\";\n    return {\n      ...hourData,\n      adjustedTime: `${formattedHour} ${ampm}`\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"hourly-forecast\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-center mb-3\",\n      children: \"Hourly Forecast\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row row-cols-1 row-cols-md-3 row-cols-lg-6 g-4\",\n      children: adjustedForecast.map(hour => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card h-100 text-center\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              className: \"card-title\",\n              children: hour.adjustedTime\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              src: hour.condition.icon,\n              alt: hour.condition.text,\n              className: \"weather-icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"card-text\",\n              children: [hour.temp_f, \"\\xB0F / \", hour.temp_c, \"\\xB0C\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"card-text\",\n              children: hour.condition.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this)\n      }, hour.time_epoch, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n_c = HourlyForecast;\nexport default HourlyForecast;\nvar _c;\n$RefreshReg$(_c, \"HourlyForecast\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","HourlyForecast","forecast","timezoneOffset","forecastday","length","children","fileName","_jsxFileName","lineNumber","columnNumber","adjustedForecast","hour","map","hourData","utcTime","Date","time_epoch","offsetMilliseconds","adjustedTime","getTime","adjustedHour","getHours","formattedHour","ampm","className","src","condition","icon","alt","text","temp_f","temp_c","_c","$RefreshReg$"],"sources":["/mnt/c/Coursera/Projects/Build_a_Website_using_an_API_with_HTML,_JavaScript,_and_JSON/project/weather-app/src/components/HourlyForecast.js"],"sourcesContent":["// In HourlyForecast.js (or wherever your HourlyForecast component is)\r\nimport React from \"react\";\r\n\r\nfunction HourlyForecast({ forecast, timezoneOffset }) {\r\n  if (!forecast || !forecast.forecastday || forecast.forecastday.length === 0) {\r\n    return <div>No hourly forecast available.</div>;\r\n  }\r\n\r\n  const adjustedForecast = forecast.forecastday[0].hour.map((hourData) => {\r\n    const utcTime = new Date(hourData.time_epoch * 1000); // Convert epoch to milliseconds\r\n    const offsetMilliseconds = timezoneOffset * 60 * 1000; // Convert offset to milliseconds\r\n    const adjustedTime = new Date(utcTime.getTime() + offsetMilliseconds);\r\n\r\n    const adjustedHour = adjustedTime.getHours();\r\n    const formattedHour = adjustedHour % 12 || 12; // Convert to 12-hour format\r\n    const ampm = adjustedHour < 12 ? \"AM\" : \"PM\";\r\n\r\n    return {\r\n      ...hourData,\r\n      adjustedTime: `${formattedHour} ${ampm}`,\r\n    };\r\n  });\r\n\r\n  return (\r\n    <div className=\"hourly-forecast\">\r\n      <h2 className=\"text-center mb-3\">Hourly Forecast</h2>\r\n      <div className=\"row row-cols-1 row-cols-md-3 row-cols-lg-6 g-4\">\r\n        {adjustedForecast.map((hour) => (\r\n          <div key={hour.time_epoch} className=\"col\">\r\n            <div className=\"card h-100 text-center\">\r\n              <div className=\"card-body\">\r\n                <h5 className=\"card-title\">{hour.adjustedTime}</h5>\r\n                <img\r\n                  src={hour.condition.icon}\r\n                  alt={hour.condition.text}\r\n                  className=\"weather-icon\"\r\n                />\r\n                <p className=\"card-text\">\r\n                  {hour.temp_f}°F / {hour.temp_c}°C\r\n                </p>\r\n                <p className=\"card-text\">{hour.condition.text}</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HourlyForecast;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}