{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Coursera/Projects/Build_a_Website_using_an_API_with_HTML,_JavaScript,_and_JSON/project/weather-app/src/components/HourlyForecast.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction HourlyForecast({\n  forecast,\n  timezoneOffset\n}) {\n  if (!forecast || !forecast.forecastday || forecast.forecastday.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No hourly forecast available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 5,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Get the current time in the target location\n  const now = new Date();\n  const nowUtc = new Date(now.getTime() + now.getTimezoneOffset() * 60000); // Convert to UTC\n  const nowTarget = new Date(nowUtc.getTime() + timezoneOffset * 60000); // Adjust to target timezone\n  const currentHour = nowTarget.getHours();\n  const currentDay = nowTarget.getDate();\n\n  // Function to adjust and format hour data\n  const adjustHourData = hourData => {\n    const utcTime = new Date(hourData.time_epoch * 1000); // Convert epoch to milliseconds\n    const offsetMilliseconds = timezoneOffset * 60 * 1000; // Convert offset to milliseconds\n    const adjustedTime = new Date(utcTime.getTime() + offsetMilliseconds);\n    const adjustedHour = adjustedTime.getHours();\n    const formattedHour = adjustedHour % 12 || 12; // Convert to 12-hour format\n    const ampm = adjustedHour < 12 ? \"AM\" : \"PM\";\n    const adjustedDay = adjustedTime.getDate();\n    return {\n      ...hourData,\n      adjustedTime: `${formattedHour} ${ampm}`,\n      adjustedHour: adjustedHour,\n      adjustedDay: adjustedDay\n    };\n  };\n\n  // Process the current day's forecast\n  let adjustedForecast = forecast.forecastday[0].hour.map(adjustHourData).filter(hour => {\n    return hour.adjustedDay === currentDay && hour.adjustedHour >= currentHour;\n  });\n\n  // If there are less than 12 hours left in the day, get the rest from the next day\n  if (adjustedForecast.length < 12 && forecast.forecastday.length > 1) {\n    const nextDayForecast = forecast.forecastday[1].hour.map(adjustHourData).filter(hour => hour.adjustedDay !== currentDay).slice(0, 12 - adjustedForecast.length);\n    adjustedForecast.push(...nextDayForecast);\n  }\n  adjustedForecast = adjustedForecast.slice(0, 12);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"hourly-forecast\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-center mb-3\",\n      children: \"Hourly Forecast\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row row-cols-1 row-cols-md-3 row-cols-lg-6 g-4\",\n      children: adjustedForecast.map(hour => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card h-100 text-center\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              className: \"card-title\",\n              children: hour.adjustedTime\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              src: hour.condition.icon,\n              alt: hour.condition.text,\n              className: \"weather-icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"card-text\",\n              children: [hour.temp_f, \"\\xB0F / \", hour.temp_c, \"\\xB0C\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"card-text\",\n              children: hour.condition.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this)\n      }, hour.time_epoch, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n_c = HourlyForecast;\nexport default HourlyForecast;\nvar _c;\n$RefreshReg$(_c, \"HourlyForecast\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","HourlyForecast","forecast","timezoneOffset","forecastday","length","children","fileName","_jsxFileName","lineNumber","columnNumber","now","Date","nowUtc","getTime","getTimezoneOffset","nowTarget","currentHour","getHours","currentDay","getDate","adjustHourData","hourData","utcTime","time_epoch","offsetMilliseconds","adjustedTime","adjustedHour","formattedHour","ampm","adjustedDay","adjustedForecast","hour","map","filter","nextDayForecast","slice","push","className","src","condition","icon","alt","text","temp_f","temp_c","_c","$RefreshReg$"],"sources":["/mnt/c/Coursera/Projects/Build_a_Website_using_an_API_with_HTML,_JavaScript,_and_JSON/project/weather-app/src/components/HourlyForecast.js"],"sourcesContent":["import React from \"react\";\r\n\r\nfunction HourlyForecast({ forecast, timezoneOffset }) {\r\n  if (!forecast || !forecast.forecastday || forecast.forecastday.length === 0) {\r\n    return <div>No hourly forecast available.</div>;\r\n  }\r\n\r\n  // Get the current time in the target location\r\n  const now = new Date();\r\n  const nowUtc = new Date(now.getTime() + now.getTimezoneOffset() * 60000); // Convert to UTC\r\n  const nowTarget = new Date(nowUtc.getTime() + timezoneOffset * 60000); // Adjust to target timezone\r\n  const currentHour = nowTarget.getHours();\r\n  const currentDay = nowTarget.getDate();\r\n\r\n  // Function to adjust and format hour data\r\n  const adjustHourData = (hourData) => {\r\n    const utcTime = new Date(hourData.time_epoch * 1000); // Convert epoch to milliseconds\r\n    const offsetMilliseconds = timezoneOffset * 60 * 1000; // Convert offset to milliseconds\r\n    const adjustedTime = new Date(utcTime.getTime() + offsetMilliseconds);\r\n\r\n    const adjustedHour = adjustedTime.getHours();\r\n    const formattedHour = adjustedHour % 12 || 12; // Convert to 12-hour format\r\n    const ampm = adjustedHour < 12 ? \"AM\" : \"PM\";\r\n    const adjustedDay = adjustedTime.getDate();\r\n\r\n    return {\r\n      ...hourData,\r\n      adjustedTime: `${formattedHour} ${ampm}`,\r\n      adjustedHour: adjustedHour,\r\n      adjustedDay: adjustedDay,\r\n    };\r\n  };\r\n\r\n  // Process the current day's forecast\r\n  let adjustedForecast = forecast.forecastday[0].hour\r\n    .map(adjustHourData)\r\n    .filter((hour) => {\r\n      return (\r\n        hour.adjustedDay === currentDay && hour.adjustedHour >= currentHour\r\n      );\r\n    });\r\n\r\n  // If there are less than 12 hours left in the day, get the rest from the next day\r\n  if (adjustedForecast.length < 12 && forecast.forecastday.length > 1) {\r\n    const nextDayForecast = forecast.forecastday[1].hour\r\n      .map(adjustHourData)\r\n      .filter((hour) => hour.adjustedDay !== currentDay)\r\n      .slice(0, 12 - adjustedForecast.length);\r\n    adjustedForecast.push(...nextDayForecast);\r\n  }\r\n  adjustedForecast = adjustedForecast.slice(0, 12);\r\n\r\n  return (\r\n    <div className=\"hourly-forecast\">\r\n      <h2 className=\"text-center mb-3\">Hourly Forecast</h2>\r\n      <div className=\"row row-cols-1 row-cols-md-3 row-cols-lg-6 g-4\">\r\n        {adjustedForecast.map((hour) => (\r\n          <div key={hour.time_epoch} className=\"col\">\r\n            <div className=\"card h-100 text-center\">\r\n              <div className=\"card-body\">\r\n                <h5 className=\"card-title\">{hour.adjustedTime}</h5>\r\n                <img\r\n                  src={hour.condition.icon}\r\n                  alt={hour.condition.text}\r\n                  className=\"weather-icon\"\r\n                />\r\n                <p className=\"card-text\">\r\n                  {hour.temp_f}°F / {hour.temp_c}°C\r\n                </p>\r\n                <p className=\"card-text\">{hour.condition.text}</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HourlyForecast;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,cAAcA,CAAC;EAAEC,QAAQ;EAAEC;AAAe,CAAC,EAAE;EACpD,IAAI,CAACD,QAAQ,IAAI,CAACA,QAAQ,CAACE,WAAW,IAAIF,QAAQ,CAACE,WAAW,CAACC,MAAM,KAAK,CAAC,EAAE;IAC3E,oBAAOL,OAAA;MAAAM,QAAA,EAAK;IAA6B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EACjD;;EAEA;EACA,MAAMC,GAAG,GAAG,IAAIC,IAAI,CAAC,CAAC;EACtB,MAAMC,MAAM,GAAG,IAAID,IAAI,CAACD,GAAG,CAACG,OAAO,CAAC,CAAC,GAAGH,GAAG,CAACI,iBAAiB,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC;EAC1E,MAAMC,SAAS,GAAG,IAAIJ,IAAI,CAACC,MAAM,CAACC,OAAO,CAAC,CAAC,GAAGX,cAAc,GAAG,KAAK,CAAC,CAAC,CAAC;EACvE,MAAMc,WAAW,GAAGD,SAAS,CAACE,QAAQ,CAAC,CAAC;EACxC,MAAMC,UAAU,GAAGH,SAAS,CAACI,OAAO,CAAC,CAAC;;EAEtC;EACA,MAAMC,cAAc,GAAIC,QAAQ,IAAK;IACnC,MAAMC,OAAO,GAAG,IAAIX,IAAI,CAACU,QAAQ,CAACE,UAAU,GAAG,IAAI,CAAC,CAAC,CAAC;IACtD,MAAMC,kBAAkB,GAAGtB,cAAc,GAAG,EAAE,GAAG,IAAI,CAAC,CAAC;IACvD,MAAMuB,YAAY,GAAG,IAAId,IAAI,CAACW,OAAO,CAACT,OAAO,CAAC,CAAC,GAAGW,kBAAkB,CAAC;IAErE,MAAME,YAAY,GAAGD,YAAY,CAACR,QAAQ,CAAC,CAAC;IAC5C,MAAMU,aAAa,GAAGD,YAAY,GAAG,EAAE,IAAI,EAAE,CAAC,CAAC;IAC/C,MAAME,IAAI,GAAGF,YAAY,GAAG,EAAE,GAAG,IAAI,GAAG,IAAI;IAC5C,MAAMG,WAAW,GAAGJ,YAAY,CAACN,OAAO,CAAC,CAAC;IAE1C,OAAO;MACL,GAAGE,QAAQ;MACXI,YAAY,EAAE,GAAGE,aAAa,IAAIC,IAAI,EAAE;MACxCF,YAAY,EAAEA,YAAY;MAC1BG,WAAW,EAAEA;IACf,CAAC;EACH,CAAC;;EAED;EACA,IAAIC,gBAAgB,GAAG7B,QAAQ,CAACE,WAAW,CAAC,CAAC,CAAC,CAAC4B,IAAI,CAChDC,GAAG,CAACZ,cAAc,CAAC,CACnBa,MAAM,CAAEF,IAAI,IAAK;IAChB,OACEA,IAAI,CAACF,WAAW,KAAKX,UAAU,IAAIa,IAAI,CAACL,YAAY,IAAIV,WAAW;EAEvE,CAAC,CAAC;;EAEJ;EACA,IAAIc,gBAAgB,CAAC1B,MAAM,GAAG,EAAE,IAAIH,QAAQ,CAACE,WAAW,CAACC,MAAM,GAAG,CAAC,EAAE;IACnE,MAAM8B,eAAe,GAAGjC,QAAQ,CAACE,WAAW,CAAC,CAAC,CAAC,CAAC4B,IAAI,CACjDC,GAAG,CAACZ,cAAc,CAAC,CACnBa,MAAM,CAAEF,IAAI,IAAKA,IAAI,CAACF,WAAW,KAAKX,UAAU,CAAC,CACjDiB,KAAK,CAAC,CAAC,EAAE,EAAE,GAAGL,gBAAgB,CAAC1B,MAAM,CAAC;IACzC0B,gBAAgB,CAACM,IAAI,CAAC,GAAGF,eAAe,CAAC;EAC3C;EACAJ,gBAAgB,GAAGA,gBAAgB,CAACK,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC;EAEhD,oBACEpC,OAAA;IAAKsC,SAAS,EAAC,iBAAiB;IAAAhC,QAAA,gBAC9BN,OAAA;MAAIsC,SAAS,EAAC,kBAAkB;MAAAhC,QAAA,EAAC;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrDV,OAAA;MAAKsC,SAAS,EAAC,gDAAgD;MAAAhC,QAAA,EAC5DyB,gBAAgB,CAACE,GAAG,CAAED,IAAI,iBACzBhC,OAAA;QAA2BsC,SAAS,EAAC,KAAK;QAAAhC,QAAA,eACxCN,OAAA;UAAKsC,SAAS,EAAC,wBAAwB;UAAAhC,QAAA,eACrCN,OAAA;YAAKsC,SAAS,EAAC,WAAW;YAAAhC,QAAA,gBACxBN,OAAA;cAAIsC,SAAS,EAAC,YAAY;cAAAhC,QAAA,EAAE0B,IAAI,CAACN;YAAY;cAAAnB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eACnDV,OAAA;cACEuC,GAAG,EAAEP,IAAI,CAACQ,SAAS,CAACC,IAAK;cACzBC,GAAG,EAAEV,IAAI,CAACQ,SAAS,CAACG,IAAK;cACzBL,SAAS,EAAC;YAAc;cAAA/B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACzB,CAAC,eACFV,OAAA;cAAGsC,SAAS,EAAC,WAAW;cAAAhC,QAAA,GACrB0B,IAAI,CAACY,MAAM,EAAC,UAAK,EAACZ,IAAI,CAACa,MAAM,EAAC,OACjC;YAAA;cAAAtC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG,CAAC,eACJV,OAAA;cAAGsC,SAAS,EAAC,WAAW;cAAAhC,QAAA,EAAE0B,IAAI,CAACQ,SAAS,CAACG;YAAI;cAAApC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC/C;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH;MAAC,GAdEsB,IAAI,CAACR,UAAU;QAAAjB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAepB,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACoC,EAAA,GA3EQ7C,cAAc;AA6EvB,eAAeA,cAAc;AAAC,IAAA6C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}