{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Coursera/Projects/Build_a_Website_using_an_API_with_HTML,_JavaScript,_and_JSON/project/weather-app/src/components/HourlyForecast.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HourlyForecast = ({\n  forecast\n}) => {\n  if (!forecast || !forecast.forecastday || forecast.forecastday.length === 0) return null;\n  const today = forecast.forecastday[0];\n  const now = new Date();\n  const currentHour = now.getHours();\n  if (!today || !today.hour) return null;\n  // Find the index of the next full hour\n  let nextHourIndex = today.hour.findIndex(hourData => {\n    const hour = new Date(hourData.time).getHours();\n    return hour > currentHour;\n  });\n\n  // If no future hour is found, start from the beginning\n  let startIndex = nextHourIndex === -1 ? 0 : nextHourIndex;\n\n  // Get the next 12 hours, starting from the next full hour\n  let hourlyData = today.hour.slice(startIndex, startIndex + 12);\n\n  // Handle the case where we wrap around to the next day\n  if (hourlyData.length < 12) {\n    const remainingHours = 12 - hourlyData.length;\n    const nextDay = forecast.forecastday[1];\n    if (nextDay && nextDay.hour) {\n      hourlyData = hourlyData.concat(nextDay.hour.slice(0, remainingHours));\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    children: hourlyData.map((hour, index) => {\n      const time = new Date(hour.time).toLocaleTimeString(\"en-US\", {\n        hour: \"numeric\",\n        hour12: true\n      });\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-4 col-lg-2\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card rounded-3 mb-3\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body text-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n              className: \"card-title\",\n              children: time\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              src: hour.condition ? hour.condition.icon : \"\",\n              alt: hour.condition ? hour.condition.text : \"\",\n              className: \"mb-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"card-text\",\n              children: [hour.temp_f, \"\\xB0F\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"card-text\",\n              children: [hour.chance_of_rain > 0 ? `Rain: ${hour.chance_of_rain}%` : \"\", hour.chance_of_snow > 0 ? `Snow: ${hour.chance_of_snow}%` : \"\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_c = HourlyForecast;\nexport default HourlyForecast;\nvar _c;\n$RefreshReg$(_c, \"HourlyForecast\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","HourlyForecast","forecast","forecastday","length","today","now","Date","currentHour","getHours","hour","nextHourIndex","findIndex","hourData","time","startIndex","hourlyData","slice","remainingHours","nextDay","concat","className","children","map","index","toLocaleTimeString","hour12","fileName","_jsxFileName","lineNumber","columnNumber","src","condition","icon","alt","text","temp_f","chance_of_rain","chance_of_snow","_c","$RefreshReg$"],"sources":["/mnt/c/Coursera/Projects/Build_a_Website_using_an_API_with_HTML,_JavaScript,_and_JSON/project/weather-app/src/components/HourlyForecast.js"],"sourcesContent":["import React from \"react\";\r\n\r\nconst HourlyForecast = ({ forecast }) => {\r\n  if (!forecast || !forecast.forecastday || forecast.forecastday.length === 0)\r\n    return null;\r\n\r\n  const today = forecast.forecastday[0];\r\n  const now = new Date();\r\n  const currentHour = now.getHours();\r\n\r\n  if (!today || !today.hour) return null;\r\n  // Find the index of the next full hour\r\n  let nextHourIndex = today.hour.findIndex((hourData) => {\r\n    const hour = new Date(hourData.time).getHours();\r\n    return hour > currentHour;\r\n  });\r\n\r\n  // If no future hour is found, start from the beginning\r\n  let startIndex = nextHourIndex === -1 ? 0 : nextHourIndex;\r\n\r\n  // Get the next 12 hours, starting from the next full hour\r\n  let hourlyData = today.hour.slice(startIndex, startIndex + 12);\r\n\r\n  // Handle the case where we wrap around to the next day\r\n  if (hourlyData.length < 12) {\r\n    const remainingHours = 12 - hourlyData.length;\r\n    const nextDay = forecast.forecastday[1];\r\n    if (nextDay && nextDay.hour) {\r\n      hourlyData = hourlyData.concat(nextDay.hour.slice(0, remainingHours));\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      {hourlyData.map((hour, index) => {\r\n        const time = new Date(hour.time).toLocaleTimeString(\"en-US\", {\r\n          hour: \"numeric\",\r\n          hour12: true,\r\n        });\r\n        return (\r\n          <div key={index} className=\"col-md-4 col-lg-2\">\r\n            <div className=\"card rounded-3 mb-3\">\r\n              <div className=\"card-body text-center\">\r\n                <h6 className=\"card-title\">{time}</h6>\r\n                <img\r\n                  src={hour.condition ? hour.condition.icon : \"\"}\r\n                  alt={hour.condition ? hour.condition.text : \"\"}\r\n                  className=\"mb-2\"\r\n                />\r\n                <p className=\"card-text\">{hour.temp_f}Â°F</p>\r\n                <p className=\"card-text\">\r\n                  {hour.chance_of_rain > 0\r\n                    ? `Rain: ${hour.chance_of_rain}%`\r\n                    : \"\"}\r\n                  {hour.chance_of_snow > 0\r\n                    ? `Snow: ${hour.chance_of_snow}%`\r\n                    : \"\"}\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HourlyForecast;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}